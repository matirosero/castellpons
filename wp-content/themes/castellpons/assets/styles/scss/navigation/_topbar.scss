.home #site-header {
	position: absolute;
	width: 100%;
}

#top-bar-menu {

	width: 100%;
	z-index: 10;
	transition: top .25s ease;

	border-bottom: 1px solid $primary-color;
	a {
		color: $body-font-color;
		@include hover {
			color: $primary-color;
		}
	}
	.current-menu-item {
		a {
			color: $primary-color;
		}
	}

	&.shrink:not(.static) {
		// height: 1px;
		top: -100px !important;
	}

	@include breakpoint(small only) {
		.menu .button, .menu a {
			padding: .7rem .5rem;
		}
	}
	@include breakpoint(medium) {
		font-size: 13px;
	}

	.home & {
		&.top-bar {
		    background-color: transparentize($topbar-background, .2);
		    ul {
		    	background-color: transparent;
		    }
		}
	}
}

a[data-toggle] {
	color: $medium-gray;
	font-size: 2.5rem;
	@include hover {
		color: $primary-color;
	}
}

#mobile-navigation {
	position: fixed;
	padding-top: 1rem;
	z-index: 10;
	right: 10px;
	left: 10px;
	visibility: hidden;

	li {
		-webkit-transition: all 0.2s ease-in-out 0s;
		-moz-transition: all 0.2s ease-in-out 0s;
		-ms-transition: all 0.2s ease-in-out 0s;
		transition: all 0.2s ease-in-out 0s;

		opacity: 0;
		visibility: hidden;

	}

	@for $i from 1 through 5 {
	  li {

	    // :nth-child(1-9)
	    &:nth-last-child(#{$i}) {

	      // Delay the animation. Delay increases as items loop.
	      transition-delay: $i * (1s / 5);
	    }
	  }
	}


	&.open {
		visibility: visible;
		li {
			opacity: 1;
			visibility: visible;
		}

		@for $i from 1 through 5 {
		  li {

		    // :nth-child(1-9)
		    &:nth-child(#{$i}) {

		      // Delay the animation. Delay increases as items loop.
		      transition-delay: $i * (1s / 5);
		    }
		  }
		}
	}
}

#mobile-navigation-background {
	background-color: $white;
	display: block;
	position: fixed;
	right: 0px;
	// transform: translate(100%);
	width: 100%;
	z-index: 9;
	height: 100%;
	top: 0px;

	-webkit-transition: all 0.2s ease-in-out 0s;
	-moz-transition: all 0.2s ease-in-out 0s;
	-ms-transition: all 0.2s ease-in-out 0s;
	transition: all 0.2s ease-in-out 0s;

	opacity: 0;
	visibility: hidden;

	&.open {
		opacity: 1;
		visibility: visible;
	}

	&:not(.open) {
		transition-delay: 1.2s;
	}

}

